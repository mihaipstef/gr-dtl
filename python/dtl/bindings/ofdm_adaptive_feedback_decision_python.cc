/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(ofdm_adaptive_feedback_decision.h) */
/* BINDTOOL_HEADER_FILE_HASH(286b3219885658a9f337caba1a3df48f)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dtl/ofdm_adaptive_feedback_decision.h>
// pydoc.h is automatically generated in the build directory
#include <ofdm_adaptive_feedback_decision_pydoc.h>

void bind_ofdm_adaptive_feedback_decision(py::module& m)
{

    using ofdm_adaptive_feedback_decision_base =
        ::gr::dtl::ofdm_adaptive_feedback_decision_base;
    using ofdm_adaptive_feedback_decision = ::gr::dtl::ofdm_adaptive_feedback_decision;


    py::class_<
        ofdm_adaptive_feedback_decision_base,
        //std::enable_shared_from_this<gr::dtl::ofdm_adaptive_feedback_decision_base>,
        std::shared_ptr<ofdm_adaptive_feedback_decision_base>>(
        m,
        "ofdm_adaptive_feedback_decision_base",
        D(ofdm_adaptive_feedback_decision_base))

     //    .def(py::init<gr::dtl::ofdm_adaptive_feedback_decision_base const&>(),
     //         py::arg("arg0"),
     //         D(ofdm_adaptive_feedback_decision_base,
     //           ofdm_adaptive_feedback_decision_base,
     //           0))
     //    .def(py::init<>(),
     //         D(ofdm_adaptive_feedback_decision_base,
     //           ofdm_adaptive_feedback_decision_base,
     //           1))


        .def("get_feedback",
             &ofdm_adaptive_feedback_decision_base::get_feedback,
             py::arg("estimated_snr"),
             D(ofdm_adaptive_feedback_decision_base, get_feedback))

        ;


    py::class_<ofdm_adaptive_feedback_decision,
               gr::dtl::ofdm_adaptive_feedback_decision_base,
               std::shared_ptr<ofdm_adaptive_feedback_decision>>(
        m, "ofdm_adaptive_feedback_decision", D(ofdm_adaptive_feedback_decision))

        .def(py::init(&ofdm_adaptive_feedback_decision::make),
             py::arg("hysterisis"),
             py::arg("decision_th"),
             py::arg("lut"),
             py::arg("initial_mcs") = 0,
             D(ofdm_adaptive_feedback_decision, make))


        .def("get_feedback",
             &ofdm_adaptive_feedback_decision::get_feedback,
             py::arg("estimated_snr"),
             D(ofdm_adaptive_feedback_decision, get_feedback))

        ;
}
