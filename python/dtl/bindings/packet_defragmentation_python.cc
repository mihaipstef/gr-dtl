/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(packet_defragmentation.h) */
/* BINDTOOL_HEADER_FILE_HASH(9fb1f5aa7f187052f785bd5a4a906c19)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dtl/packet_defragmentation.h>
// pydoc.h is automatically generated in the build directory
#include <packet_defragmentation_pydoc.h>

void bind_packet_defragmentation(py::module& m)
{

    using packet_defragmentation = ::gr::dtl::packet_defragmentation;


    py::class_<packet_defragmentation,
               gr::tagged_stream_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<packet_defragmentation>>(
        m, "packet_defragmentation", D(packet_defragmentation))

        .def(py::init(&packet_defragmentation::make),
             py::arg("validator"),
             py::arg("len_key"),
             D(packet_defragmentation, make))


        ;
}
