id: dtl_ofdm_adaptive_rx
label: OFDM Adaptive Receiver
flags: [ python ]
category: '[DTL]'

parameters:
-   id: ofdm_config
    label: OFDM Adaptive Configuration
    dtype: raw
    hide: ${"part" if bool(ofdm_config) else "none"}
    default: {}
-   id: len_tag_key
    label: Length tag key
    dtype: string
    default: "len_tag_key"


asserts:
- ${ofdm_config["fft_len"] > 0 if "fft_len" in ofdm_config else True}
- ${ofdm_config["cp_len"] > 0 if "cp_len" in ofdm_config else True}

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: byte
-   domain: stream
    dtype: complex
-   domain: stream
    dtype: byte
-   domain: stream
    dtype: byte
-   domain: stream
    dtype: complex
    vlen: ${ofdm_config.get("fft_len", default_config.fft_len)}
-   domain: stream
    dtype: complex
-   domain: stream
    dtype: float
-   domain: message
    id: monitor

templates:
    imports: |-
        from gnuradio.dtl.ofdm_adaptive_config import ofdm_adaptive_config as default_config
        from gnuradio.dtl import ofdm_adaptive_rx

    make: |-
        ofdm_adaptive_rx.from_parameters(
            config_dict=${ofdm_config},
            packet_length_tag_key=${len_tag_key})

file_format: 1
